# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: jarFile
        path: build/libs/*.jar
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      ## 아티팩트 전송을 위한 임시 공간
      - name: Create dir
        run: mkdir ~/dist
      - name: Download artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: jarFile
          path: dist
      ## SSH 연결로 아티팩트 서버에 다운로드
      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: "dist/*"
          target: "~/foodstagram/deploy"
          strip_components: 1
      ## deploy.sh 파일 실행
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "#### > now ing foodstagram pid find! ####"
            SOURCE_DIR=~/foodstagram/deploy
            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
            CURRENT_PID=`ps -ef | grep foodstagram | grep -v grep | awk '{print $2}'`
            
            if [ $CURRENT_PID ]; then
              echo "#### exist ing foodstagram ####"
              sudo kill -9 $CURRENT_PID
            else
              echo "#### > no ing foodstagram ####"
            fi

            echo "#### move yml ####"
            cp ~/foodstagram/application.yml $SOURCE_DIR

            echo "#### start deploy ####"
            cd $SOURCE_DIR
            nohup java -jar $FILE_NAME > /dev/null 2>&1 &
