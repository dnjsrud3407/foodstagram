# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: jarFile
        path: build/libs/*.jar
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      ## 아티팩트 전송을 위한 임시 공간
      - name: Create distribute
        run: mkdir ~/dist
      - name: Download artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: jarFile
          path: dist
      - name: SCP transfer
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          rm: true
          source: "dist/*.jar"
          target: ~/foodstagram/cicd/
          strip_components: 1
      - name: Execute remote commands
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo nohup java -jar ~/foodstagram/cicd/*.jar &"
